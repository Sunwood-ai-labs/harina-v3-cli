name: Upload Python Package

on:
  push:
    tags:
      - "v*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for trusted publishing
      contents: write # Required for pushing changes
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Update version in pyproject.toml
        run: |
          sed -i 's/version = "[^"]*"/version = "${{ steps.get_version.outputs.version }}"/' pyproject.toml
          echo "Updated pyproject.toml version to ${{ steps.get_version.outputs.version }}"

      - name: Update version in harina/__init__.py
        run: |
          sed -i 's/__version__ = "[^"]*"/__version__ = "${{ steps.get_version.outputs.version }}"/' harina/__init__.py
          echo "Updated harina/__init__.py version to ${{ steps.get_version.outputs.version }}"

      - name: Verify version consistency
        run: |
          TAG_VERSION="${{ steps.get_version.outputs.version }}"
          PYPROJECT_VERSION=$(grep 'version = ' pyproject.toml | sed 's/.*version = "\([^"]*\)".*/\1/')
          INIT_VERSION=$(grep '__version__ = ' harina/__init__.py | sed 's/.*__version__ = "\([^"]*\)".*/\1/')

          echo "Tag version: $TAG_VERSION"
          echo "pyproject.toml version: $PYPROJECT_VERSION"
          echo "harina/__init__.py version: $INIT_VERSION"

          if [ "$TAG_VERSION" != "$PYPROJECT_VERSION" ] || [ "$TAG_VERSION" != "$INIT_VERSION" ]; then
            echo "Error: Version mismatch detected!"
            exit 1
          fi
          echo "All versions match successfully!"

      - name: Commit and push version updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Check if there are changes to commit
          if git diff --quiet; then
            echo "No changes to commit"
          else
            git add pyproject.toml harina/__init__.py
            git commit -m "âš™ chore: update version to ${{ steps.get_version.outputs.version }} from tag"
            git push origin HEAD:main
            echo "Version updates pushed to main branch"
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
